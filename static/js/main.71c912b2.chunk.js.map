{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","options","JSON","parse","localStorage","getItem","state","error","bootstraped","reviewsFetchFired","prData","prReviews","mergeable","comments","teamMembers","config","objectSpread","access_token","repo","refreshIntervalInMinutes","daysForOldMark","emoji","vertical","team","notifications","notification_icon","font_size","repo_order","handleError","bind","assertThisInitialized","showConfig","hideConfig","counter","document","getElementsByTagName","style","fontSize","Notification","permission","requestPermission","then","result","console","info","newPRs","_this2","forEach","pr","title","body","user","login","icon","avatar_url","requireInteraction","newData","oldPRs","undefined","arraysDiff","length","notifyNewPR","key","filter","res","find","res2","_this3","repos","split","sort","a","b","trim","toLowerCase","join","querySelector","value","order","parentElement","classList","add","remove","type","pullURL","base","concat","requestPath","_this4","tempPRData","assign","repoName","fetch","getUrl","response","json","data","message","setState","prevState","newStatePRData","includes","keys","checkNewPR","orderRepos","catch","fetchPullRequests","timer","window","setInterval","page","teamOrg","responseData","_this5","fetchOrgTeams","_this6","getTeamInfo","teams","targetTeam","slug","id","Array","isArray","map","member","startFetching","setTeamInfo","getNotificationPermission","changeFontSize","_this7","url","reviews","defineProperty","number","mergeable_state","review_comments","warn","react_default","createElement","className","numOfComments","role","aria-label","_this8","maxDays","oldClass","differenceInDays","Date","updated_at","decideOldClass","src","alt","href","html_url","rel","target","distanceInWords","renderEmoji","renderReviews","configElems","querySelectorAll","configToSave","input","name","setItem","stringify","location","reload","onClick","placeholder","defaultValue","min","onChange","showHideOrder","saveConfig","prNumber","allowedReviewStates","filteredReviews","review","dist_default","content","_this9","repoPR","renderPR","_this10","renderConfig","displayError","renderRepo","color","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71c912b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport distanceInWords from 'date-fns/distance_in_words';\nimport differenceInDays from 'date-fns/difference_in_days';\nimport Tooltip from 'react-tooltip-lite';\n\nclass App extends Component {\n  constructor() {\n    super();\n    const options = JSON.parse(localStorage.getItem('prwallconfig')) || {};\n    const defaults = {\n      access_token: '',\n      repo: '',\n      refreshIntervalInMinutes: 2,\n      daysForOldMark: 3,\n      emoji: 'no',\n      vertical: 'vertical',\n      team: '',\n      notifications: 'no',\n      notification_icon: '',\n      font_size: 16,\n      repo_order: 'default'\n    }\n\n    this.state = {\n      error: false,\n      bootstraped: false,\n      reviewsFetchFired: false,\n      prData: {},\n      prReviews: {},\n      mergeable: {},\n      comments: {},\n      teamMembers: [],\n    }\n    this.config = {...defaults, ...options}\n    this.handleError = this.handleError.bind(this);\n    this.showConfig = this.showConfig.bind(this);\n    this.hideConfig = this.hideConfig.bind(this);\n\n    this.counter = 0;\n  }\n  changeFontSize() {\n    let html = document.getElementsByTagName('html')[0];\n    html.style.fontSize = this.config.font_size +'px';\n  }\n  getNotificationPermission() {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(result => console.info('notifications ' + result))\n    }\n  }\n  notifyNewPR(newPRs) {\n    newPRs.forEach(pr => {\n      const title = pr.title;\n      const options = {\n        body: pr.user.login,\n        icon: pr.user.avatar_url,\n        requireInteraction: true\n      };\n      if (this.config.notification_icon !== '') options.icon = this.config.notification_icon;\n      new Notification(title, options);\n    });\n  }\n  checkNewPR(newData, oldPRs) {\n    if(newData !== undefined) { \n      const newPRs = this.arraysDiff('id', newData, oldPRs);\n      if(newPRs.length > 0) this.notifyNewPR(newPRs);\n    }\n  }\n  arraysDiff(key, newData, oldPRs) {\n    return newData.filter(res => !oldPRs.find(res2 => res[key] === res2[key]));\n  }\n  orderRepos(prData) {\n    let repos = this.config.repo.split(',').sort((a, b) => {\n      a = prData[a.trim()].length;\n      b = prData[b.trim()].length;\n\n      if (this.config.repo_order.toLowerCase() === 'asc') {\n        return a === b ? 0 : a < b ? -1 : 1; \n      } else {\n        return a === b ? 0 : a > b ? -1 : 1; \n      }\n    });\n\n    this.config.repo = repos.join();\n  }\n  showHideOrder() {\n    const vertical = document.querySelector('#vertical').value;\n    let order = document.querySelector('#repo_order').parentElement;\n\n    if (vertical === 'vertical') {\n      order.classList.add('hidden');\n    } else {\n      order.classList.remove('hidden');\n    }\n  }\n  getUrl(repo, type, pullURL) {\n    /* Example:\n    ** https://developer.github.com/v3/pulls/\n    ** GET /repos/:owner/:repo/pulls\n    ** ?access_token=:acces_token\n    */\n    const base = repo ? `https://api.github.com/repos/${repo}/pulls` : pullURL;\n    let requestPath = ''\n    \n    if (type === 'reviews') {\n      requestPath = '/reviews'\n    }\n\n    if (this.config.access_token) {\n      requestPath += `?access_token=${this.config.access_token}`\n    }\n\n    return base + requestPath;\n  }\n  fetchPullRequests() {\n    const tempPRData = {};\n    if(this.state.prData !== undefined) Object.assign(tempPRData, this.state.prData);\n    this.config.repo.split(',').forEach((repo) => {\n      const repoName = repo.trim();\n      fetch(this.getUrl(repoName))\n      .then(response => {\n        return response.json()\n      })\n      .then((data) => { \n        if (!data || data.message) {\n          this.handleError(data);\n        } else {\n          this.setState((prevState) => {\n            const newStatePRData = {...prevState.prData}\n            newStatePRData[repoName] = data.filter(pr => {\n              if (this.state.teamMembers.length === 0) {\n                return true;\n              }\n              return this.state.teamMembers.includes(pr.user.login)\n            });\n            if (Notification.permission === 'granted' && this.config.notifications === 'yes' && Object.keys(tempPRData).length > 0) {\n                this.checkNewPR(data, tempPRData[repoName]);\n            }\n\n            if (this.config.vertical !== 'vertical' && this.config.repo_order.toLowerCase() !== 'default') {\n              this.counter++;\n              if (this.config.repo.split(',').length === this.counter) {\n                this.orderRepos(newStatePRData);\n                this.counter = 0;\n              }\n            }\n\n            return { error: false, bootstraped: true, prData:newStatePRData, prReviews: {}, reviewsFetchFired: false}\n          });\n        }\n      })\n      .catch((error) => {\n        this.handleError(error)\n      })\n    });\n  }\n\n  startFetching() {\n    this.fetchPullRequests();\n    this.timer = window.setInterval(this.fetchPullRequests.bind(this), this.config.refreshIntervalInMinutes*60*1000);\n  }\n\n  async fetchOrgTeams(page = 1) {\n    const teamOrg = this.config.team.split('/')[0];\n    let responseData = [];\n\n    await fetch(`https://api.github.com/orgs/${teamOrg}/teams?access_token=${this.config.access_token}&page=${page}`)\n    .then(response => response.json())\n    .then((data) => {\n        if (!data || data.message) {\n          this.handleError('No teams found!');\n        }\n        responseData = data;\n    });\n    \n    if (responseData.length > 0) {\n      const newData = await this.fetchOrgTeams(++page);\n      responseData = responseData.concat(newData)\n    } \n\n    return responseData;\n  }\n\n  async getTeamInfo() {\n    return await this.fetchOrgTeams();\n  }\n\n  setTeamInfo() {\n    this.getTeamInfo()\n    .then((teams) => {\n      const targetTeam = teams\n        .find(team => team.slug === this.config.team.split('/')[1]);\n      \n      if (!targetTeam) {\n        this.handleError('No team found!')\n      } else {\n        fetch(`https://api.github.com/teams/${targetTeam.id}/members?access_token=${this.config.access_token}`)\n        .then(response => response.json())\n        .then((data) => {\n          const teamMembers = Array.isArray(data) && data.map(member => member.login);\n          this.setState({teamMembers});\n          !this.timer && this.startFetching();\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.config.repo) {\n      if (this.config.team) {\n        this.setTeamInfo();\n        // check team info every 24 hours\n        window.setInterval(this.setTeamInfo.bind(this), 24*60*60*1000);\n      } else {\n        this.startFetching();\n      }\n    }\n\n    if (this.config.notifications === 'yes' && Notification.permission !== 'denied') this.getNotificationPermission();\n    this.changeFontSize();\n  }\n\n  componentDidUpdate() {\n    // Fetch aditional reviews data only when there hasn't been fired request for it already\n    if (!this.state.reviewsFetchFired && Object.keys(this.state.prData).length > 0) {\n      Object.keys(this.state.prData).forEach((repoName) => {\n        this.state.prData[repoName].forEach((pr) => {\n          fetch(this.getUrl(undefined, 'reviews', pr.url))\n          .then(response => response.json())\n          .then((data) => {\n            if (data.message) {\n              this.handleError(data);\n            } else {\n              const reviews = {\n                ...this.state.prReviews,\n                [repoName + '_' + pr.number]: data\n              }\n              this.setState( {prReviews: reviews} );\n            }\n          })\n          .catch((error) => this.handleError(error))\n\n          fetch(this.getUrl(undefined, 'pull', pr.url))\n          .then(response => response.json())\n          .then((data) => {\n            if (data.message) {\n              this.handleError(data);\n            } else {\n              this.setState((state) => {\n                let mergeable = {...state.mergeable}\n                mergeable[repoName + '_' + pr.number] = {}\n                mergeable[repoName + '_' + pr.number].mergeable = data.mergeable\n                mergeable[repoName + '_' + pr.number].mergeable_state = data.mergeable_state\n\n                let comments = {...state.comments}\n                comments[repoName + '_' + pr.number] = 0\n                comments[repoName + '_' + pr.number] = data.comments + data.review_comments;\n\n                return { mergeable, comments }\n              })\n            }\n          })\n          .catch((error) => this.handleError(error))\n        })\n     })\n\n      this.setState( {reviewsFetchFired: true} );\n    }\n  }\n  handleError(error) {\n    console.warn(error);\n    this.setState({error: true, bootstraped: true})\n  }\n\n  displayError() {\n    return this.state.error\n    ? <div className=\"error\">Error occured. Possible issue: API limit rate exceeded or service down or access_token not permitted or repo not found. If you reach API limit, it is good to raise the refresh rate interval to higher number. Check console/network.</div>\n    : ''\n  }\n\n  renderEmoji(numOfComments) {\n    if (this.config.emoji === 'no') {\n      return ''\n    }\n    let emoji = '😀';\n    if (numOfComments > 0 && numOfComments < 3) {\n      emoji = '🙄';\n    }\n    if (numOfComments > 2 && numOfComments < 6) {\n      emoji = '😐';\n    }\n    if (numOfComments > 5 && numOfComments < 11) {\n      emoji = '🙈';\n    }\n    if (numOfComments > 10 && numOfComments < 21) {\n      emoji = '😱';\n    }\n    if (numOfComments > 20) {\n      emoji = '💩';\n    }\n    return <span role=\"img\" aria-label=\"feeling based on comments\">{emoji}</span>\n  }\n\n  renderPR(repo, pr) {\n    const decideOldClass = (pr) => {\n      const maxDays = this.config.daysForOldMark; // old if more than 7 days\n      let oldClass = '';\n      \n      if(differenceInDays(new Date(),new Date(pr.updated_at)) >= maxDays) {\n        oldClass = 'old';\n      }\n\n      return oldClass;\n    }\n\n    const mergeable = this.state.mergeable[repo + '_' + pr.number]\n      && this.state.mergeable[repo + '_' + pr.number].mergeable \n      && this.state.mergeable[repo + '_' + pr.number].mergeable_state === 'clean' ? ' mergeable' : '';\n\n    const numOfComments = this.state.comments[repo + '_' + pr.number];\n\n    return (\n      <div key={pr.number} className={`pull-request-wrap ${decideOldClass(pr)}  ${mergeable}`}>\n        <div className=\"pull-request-title\">\n          <span className=\"pull-request-user\"><img src={pr.user.avatar_url} title={pr.user.login} alt=\"user\"/></span>\n          <span className=\"pull-request-state\">{pr.state}</span>\n          <span>{pr.title}</span>\n        </div>\n        <div className=\"pull-request-meta\">\n          <div>\n            <span className=\"pull-request-number\">\n              <a href={pr.html_url} rel=\"noopener noreferrer\" target=\"_blank\">{pr.number}</a>\n            </span> \n            <span>Updated: <span className=\"pull-request-ago\">{distanceInWords(new Date(), new Date(pr.updated_at))}</span> ago.</span>\n          </div>\n          <div>\n            <div className=\"review_comments\"><span role=\"img\" aria-label=\"comments:\">💬</span> {numOfComments} {this.renderEmoji(numOfComments)}</div>\n            {this.renderReviews(repo, pr.number)}\n          </div>\n          </div>\n      </div>\n    )\n  }\n  saveConfig() {\n    const configElems = document.querySelectorAll('input, select')\n    const configToSave = {}\n\n    configElems.forEach((input) => {\n      configToSave[input.name] = input.value\n    })\n\n    localStorage.setItem('prwallconfig', JSON.stringify(configToSave))\n    window.location.reload();\n  }\n\n  showConfig () { this.setState({showConfig: true})}\n\n  hideConfig () { this.setState({showConfig: false})}\n\n  renderConfig() {\n    if (!this.state.showConfig) {\n      return <div className=\"show\" onClick={this.showConfig}>Show Config</div>\n    }\n    return (\n      <div className=\"config\">\n        <div className=\"hide\" onClick={this.hideConfig}>hide config</div>\n        <div className=\"app-name\"><img src={process.env.PUBLIC_URL + '/app-icon.png'} alt=\"app-icon\"/> <span>Github PR Wall montior</span></div>\n        <form>\n          <ul>\n          <li>\n            <input type=\"text\" name=\"access_token\" id=\"access_token\" placeholder=\"access_token\" defaultValue={this.config.access_token}/>\n            <span><strong>Access token: </strong> Github access_token (Make sure to check REPO rights) <a href=\"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/\">Help</a></span>\n          </li>\n          <li>\n            <input type=\"text\" name=\"repo\" id=\"repo\" placeholder=\"owner/repo\" defaultValue={this.config.repo}/>\n            <span><strong>Repositories: </strong>(e.g. if your repo is https://github.com/<strong>facebook/create-react-app</strong>, you need to type <strong>facebook/create-react-app</strong>) You can have multiple repos, just separate them with comma (repo,repo)</span>\n          </li>\n          <li>\n            <input type=\"number\" min=\"1\" name=\"refreshIntervalInMinutes\" id=\"refreshIntervalInMinutes\" defaultValue={this.config.refreshIntervalInMinutes}/>\n            <span><strong>Refresh rate: </strong> in minutes</span>\n          </li>\n          <li>\n            <input type=\"number\" min=\"1\" name=\"daysForOldMark\" id=\"daysForOldMark\" defaultValue={this.config.daysForOldMark}/>\n            <span className=\"old\"><strong>Highlight: </strong>(in days) Days for old mark highlight</span>\n          </li>\n          <li>\n            <input type=\"text\" name=\"team\" id=\"team\" placeholder=\"organisation/my-team\" defaultValue={this.config.team}/>\n            <span><strong>Team Filter: </strong> If specified, show pull requests created only by members of the team, e.g. <strong>performgroup/my-team-slug</strong> (team members are checked only once per day)</span>\n          </li>\n          <li>\n            <select name=\"vertical\" id=\"vertical\" defaultValue={this.config.vertical} onChange={this.showHideOrder}>\n              <option value=\"vertical\">vertical</option>\n              <option value=\"horizontal\">horizontal</option>\n            </select>\n            <span><strong>Display: </strong>display setting for multiple repositories</span>\n          </li>\n          <li className={this.config.vertical === 'vertical' ? 'hidden' : ''}>\n            <select name=\"repo_order\" id=\"repo_order\" defaultValue={this.config.repo_order}>\n              <option value=\"default\">default</option>\n              <option value=\"asc\">asc</option>\n              <option value=\"desc\">desc</option>\n            </select>\n            <span><strong>Repo order: </strong>order repositories by number of pull requests. <strong>\"default\"</strong> will sort by order in the \"Repositories\" config item. (Works only in \"horizontal\" display mode. )</span>\n          </li>\n          <li>\n            <select name=\"emoji\" id=\"emoji\" defaultValue={this.config.emoji}>\n              <option value=\"no\">no</option>\n              <option value=\"yes\">yes</option>\n            </select>\n            <span><strong>Show emoji: </strong>based on comments number </span>\n          </li>\n          <li>\n            <select name=\"notifications\" id=\"notifications\" defaultValue={this.config.notifications}>\n              <option value=\"no\">no</option>\n              <option value=\"yes\">yes</option>\n            </select>\n            <span><strong>Browser notifications: </strong> turn on/off to get notification in browser when you have tab open and switch to differnt tab</span>\n          </li>\n          <li>\n            <input type=\"text\" name=\"notification_icon\" id=\"notification_icon\" defaultValue={this.config.notification_icon}/>\n            <span><strong>Notification icon: </strong>URL string - if set it will always display specified image from the url</span>\n          </li>\n          <li>\n            <input type=\"number\" name=\"font_size\" id=\"font_size\" defaultValue={this.config.font_size}/>\n            <span><strong>Font size: </strong>default font-size - other elements will scale accordingly</span>\n          </li>\n          <li><span className=\"button\" onClick={this.saveConfig}>Save Config</span></li>\n          </ul>\n        </form>\n      </div>\n    )\n  }\n  renderReviews(repo, prNumber) {\n    const allowedReviewStates = ['APPROVED', 'CHANGES_REQUESTED'];\n    const reviews = this.state.prReviews[repo + '_' + prNumber];\n    \n    if (!reviews || typeof reviews.filter !== 'function') {\n      return <img className=\"reviews-loading\" src=\"https://loading.io/spinners/dual-ring/index.dual-ring-loader.svg\" alt=\"loading\"/>;\n    }\n\n    let filteredReviews = reviews\n      .filter((review) => allowedReviewStates.includes(review.state))\n      .map((review) => {\n      return (\n        <Tooltip key={review.id} className=\"pull-request-reivew-tooltip\" content={review.user.login}>\n        <span className={review.state + ' pull-request-review'}>\n          <img src={review.user.avatar_url} alt=\"user review\"/>\n          <span className=\"overlay\"></span>\n        </span>\n        </Tooltip>\n      )});\n\n    if (filteredReviews.length === 0) {\n      return <span className=\"no-reviews\">No reviews yet</span>\n    }\n\n    return filteredReviews;\n  }\n  renderRepo(repoName) {\n    const repoPR = this.state.prData[repoName];\n\n    if (!repoPR) {\n      return <div key={repoName}><h4 className=\"repo-heading\">{repoName}</h4></div>\n    }\n    return <div key={repoName} className={repoName}><h4 className=\"repo-heading\">{repoName}</h4>{repoPR.map(pr => this.renderPR(repoName, pr))}</div>\n\n  }\n  render() {\n    if (!this.state.bootstraped) {\n      return (\n        <div>\n          {this.renderConfig()}\n          <p style={{color: '#fff'}}>If loading takes too long, check your app config and network connection</p>\n          <img src=\"https://loading.io/spinners/dual-ring/index.dual-ring-loader.svg\" alt=\"loading\"/>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <div className=\"legend\">\n          <ul>\n            <li className=\"mergable\">is mergable</li>\n            <li className=\"old\">older then {this.config.daysForOldMark} days</li>\n            {this.config.team ? <li className=\"teamFilter\"><span role=\"img\" aria-label=\"team\"> team 😎:</span> {this.config.team}</li> : ''}\n          </ul>\n        </div>\n        {this.renderConfig()}\n        {this.displayError()}\n        <div className={'all-repos-wrap ' + (this.config.vertical === 'vertical' ? 'vertical' : 'horizontal')}>\n          {this.config.repo.split(',').map(repoName => this.renderRepo(repoName.trim()))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}